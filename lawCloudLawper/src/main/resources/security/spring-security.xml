<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <http pattern="/toLogin" security="none" />
    <http pattern="/authentication_failure_url" security="none" />
    <http pattern="/static/**" security="none" />
    <http pattern="/**/*.js.map" security="none" />
    <!--<http auto-config="true" use-expressions="true">-->
    <http auto-config="true">

        <form-login login-page="/toLogin" login-processing-url="/login.do"
                    username-parameter="username" password-parameter="password"
                    default-target-url="/default_target_url"
                    always-use-default-target="true"
                    authentication-success-handler-ref="authSuccess"

                    authentication-failure-url="/authentication_failure_url"
        />

        <!--<intercept-url pattern="/toLogin" access="permitAll" />-->
        <custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />

        <csrf disabled="true" />

        <remember-me token-validity-seconds="120" token-repository-ref="persistentTokenRepository" />
    </http>

    <!--
        需要注意的是使用 jdbc-user-service 定义的 UserDetailsService 是不支持用户组权限的，
        如果需要支持用户组权限的话需要我们使用 JdbcDaoImpl
    -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsService" />
    </authentication-manager>

    <!--<beans:bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="enableGroups" value="true"/>
        <beans:property name="rolePrefix" value="ROLE_"/>
    </beans:bean>-->
    <beans:bean id="userDetailsService" class="com.lawcloud.lawper.security.CustomUserDetailsService" />

    <!-- 认证成功后的处理类 -->
    <beans:bean id="authSuccess" class="com.lawcloud.lawper.security.AuthenticationSuccessHandlerImpl"/>

    <!--自定义SecurityMetadataSource  -->
    <beans:bean id="securityMetadataSource" class="com.lawcloud.lawper.security.URLFilterInvocationSecurityMetadataSource"/>

    <!-- 认证过滤器 -->
    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />
    </beans:bean>

    <beans:bean id="old_accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters">
            <beans:list>
                <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
                <!--<beans:ref bean="roleVoter"/>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />-->
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>

    <!-- 授权管理器 -->
    <beans:bean id="accessDecisionManager" class="com.lawcloud.lawper.security.CustomUserAccessDecisionManager" />

    <beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value="ROLE_"/>
    </beans:bean>

    <beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter" />

    <!-- rememberMe by persistent-->
    <beans:bean id="persistentTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="createTableOnStartup" value="false" />
    </beans:bean>
</beans:beans>










